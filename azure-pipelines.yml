# Python Function App to Linux on Azure
# Build a Python function app and deploy it to Azure as a Linux function app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool: Default

variables:
  workingDirectory: '$(System.DefaultWorkingDirectory)/'

stages:

- stage: Build
  displayName:  Build and test
  
  jobs:
    - job: Build
      displayName: Build
      workspace:
          clean: all
  
      steps:
      - bash: |
          if [ -f extensions.csproj ]
          then
              dotnet build extensions.csproj --runtime ubuntu.16.04-x64 --output ./bin
          fi
        workingDirectory: $(workingDirectory)
        displayName: 'Build extensions'
  
      - task: UsePythonVersion@0
        displayName: "Setting python version to 3.7 as required by functions"
        inputs:
          versionSpec: '3.7'
          architecture: 'x64'
  
      - bash: |
          if [ -f extensions.csproj ]
          then
              dotnet build extensions.csproj --output ./bin
          fi
          pip install --target="./.python_packages/lib/site-packages" -r ./requirements.txt
        displayName: 'Install tools and dependencies'  
  
      - script: |
          pip install pytest
          pip install pytest-cov
          pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml --cov-report=html --cov-config=coveragerc
        displayName: 'Test with pytest'
  
      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testResultsFiles: '**/test-*.xml'
          testRunTitle: 'Publish test results for Python $(python.version)'
  
      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
          reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'     
  
      - task: CopyFiles@2
        displayName: 'Copy code to: $(Build.ArtifactStagingDirectory) '
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)'
          Contents: |
              **/*
              !.git/**/*
              !tests/**/*
              !.*
              !*.yml
              !ARM/**/*
              !htmlcov/**/*
              !junit/**/*
              !.vscode/**/*
              !.pytest*/**/*
              !coverage.xml
              !coveragerc
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
  
      - task: ArchiveFiles@2
        displayName: "Create deployment zip"
        inputs:
          rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
          includeRootFolder: false
          archiveFile: "$(Build.ArtifactStagingDirectory)/build$(Build.BuildId).zip"
  
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/build$(Build.BuildId).zip'
          artifactName: 'drop'

- stage: DeployDEV
  displayName: Deploy to dev environment
  dependsOn: Build
  condition:  succeeded()
  variables:
  - group: webalerts-dev-vargroup

  jobs:
    - template: azure-pipelines-deploy-template.yml
      parameters:
        azureSub: rg-webnotifications_dev
        environment: development
        funcAppName: $(FunctionAppName)

- stage: DeployPROD
  displayName: Deploy to production environment
  dependsOn: Build
  condition:  succeeded()
  variables:
  - group: webalerts-prod-vargroup

  jobs:
    - template: azure-pipelines-deploy-template.yml
      parameters:
        azureSub: rg-webnotifications
        environment: production
        funcAppName: $(FunctionAppName)
